Is there any :
Cross-shell 
Cross-OS 
Cross Distros 


Kernal --> Core 
Shell --> Many shells - syntax varies 
Application --> Terminals --> MOBAXterm | Putty 

[environment-vars] command [options] [arguments] [redirections] [pipelines] [command-chain]
1. Environment Variables (optional)
FOO=bar command ...
LANG=ar_EG.UTF-8 date

2. Command
This is the program or built-in you want to run, e.g. ls, grep, sudo, tar, etc.
If it’s in your PATH, you just type its name.
Otherwise you need a path: ./my_script.sh or /usr/bin/python3.

3. Options (flags)
Also called switches or flags, they modify the behavior of the command.

* Short
	ls -l      # long listing
	ls -a      # show hidden files
	ls -la     # both flags at once
	ls file*
* Long 
	grep --ignore-case pattern file.txt

4. Arguments
grep pattern /var/log/syslog
tar -xzvf archive.tar.gz   # no extra args ⇒ list/extract all

5. Redirections
You can redirect stdin, stdout, and stderr to/from files:

> overwrite stdout to file
>> append stdout
< read stdin from file
2> redirect stderr

ls -l /etc > etc_list.txt      # stdout → etc_list.txt
grep error logfile 2> errs.txt  # stderr → errs.txt



6. Pipelines
Use | to send one command’s stdout as the next command’s stdin:
ps aux | grep apache | wc -l

7. Command-Chaining
Run multiple commands in sequence or based on success/failure:
; run sequentially regardless of result
&& run next only if previous succeeds
|| run next only if previous fails

make && sudo make install     # install only if build succeeds


Full Example
TIMEFORMAT='%R'; time sudo du -sh /var/log/* 2>> errors.log | sort -h > sizes.txt
TIMEFORMAT=... → temp env var for time

time → measures runtime
sudo du -sh /var/log/* → as root, disk-usage summary, human-readable
-s summary per file/dir
-h human units (K/M/G)
2>> errors.log → append error messages to errors.log
| sort -h → sort results by human numbers
> sizes.txt → write final sorted output to sizes.txt

---

## 1. Update & Prepare Your Shell Environment

 
# Upgrade PowerShell to the latest version
# 🛠️ حدث PowerShell لأحدث إصدار

winget upgrade --id Microsoft.PowerShell

# Install PowerShell via MSI using the official Microsoft script
# 🛠️ يثبت PowerShell عن طريق MSI عبر السكربت الرسمي

iex "& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI"

🛠️ What it does:
	irm (Invoke-RestMethod) downloads the official install script.
	iex (Invoke-Expression) executes it.
	-UseMSI ensures it uses the Windows Installer for a smooth setup.


# Uninstall any existing WSL distribution
# 🛠️ يشيل WSL القديم
wsl --uninstall

# Install default WSL distribution (Ubuntu) and components
# 🛠️ يثبت WSL مع أوبونتو إفتراضي
wsl --install
 

apt --help
sudo apt list | grep ncal > result.txt
sudo apt upgrade
sudo apt list 
apt show ncal
apt search httpd
sudo apt install --simulate nginx
sudo apt install --dry-run nginx
sudo apt show autofs
🧪 What these do:

--simulate or --dry-run will preview the installation process.

They show which packages would be installed, upgraded, or removed.

No actual changes are made to your system.


sudo apt upgrade --simulate
sudo apt remove --simulate nginx

---

## 2. Detect & Change Your Shell

 
# Show current shell
# 🛠️ يعرض الصَدَفة الحالية


echo $SHELL
cat /etc/shells
which bash 
which python3 --> get this path and added in the 1s line in py script , and if you take this path and enter in shell will convert to py comiele (/usr/bin/python3)
 
cat ~/.bashrc
cat ~/.bash_profile	
cat ~/.profile --> for configuring Pathes in your environment for your script

To Execute Script :
* ./script.sh 
* use pwd to get full absolute path 
* add path in env variable through vim ~/.profile 
	# write : export PATH=$PATH:(write here the path for my script from pwd)

ubuntu@UbuntUmachine:~$ name=ahmed
ubuntu@UbuntUmachine:~$ echo $name
ahmed 
ubuntu@UbuntUmachine:~$ bash  -> here i enter sub bash from mine 
ubuntu@UbuntUmachine:~$ $name  --> will not return any results until i export 
ubuntu@UbuntUmachine:~$ exit --> will exist from the sub terminal 
exit
ubuntu@UbuntUmachine:~$ echo $name
ahmed



File			Scope			Description
~/.bashrc		Interactive Shells	Configures aliases, functions, prompt styles, etc.
~/.bash_profile		Login Shells		Loads shell environment settings; may source .bashrc
~/.profile		Login Shells		Fallback for systems without .bash_profile; sets environment variables
/etc/bash.bashrc	Global			System-wide settings for all users' interactive shells
/etc/profile		Global Login		System-wide environment config for login shells
chsh -s /usr/bin/zsh



# Install Zsh for a modern shell

sudo apt update && sudo apt install -y zsh

# Install KornShell (ksh)
sudo apt update && sudo apt install -y ksh

# Reconfigure any half-installed packages
sudo dpkg --configure -a

# Fully upgrade your system
sudo apt update && sudo apt upgrade -y
 

---

## 3. Install Common CLI Tools

 
# Install a set of monitoring, networking, and utility tools
# 🛠️ يثبت أدوات مراقبة وشبكات ونسخ ومزامنة وغيرها

sudo apt update && sudo apt install -y \
  htop \
  net-tools \
  nmap \
  ufw \
  fail2ban \
  tmux \
  curl \
  rsync \
  git \
  openssh-server \
  docker.io \
  ansible \
  sysstat \
  deborphan \
  ncal \
  zsh \
  ksh \
  tree \
  vim  \
  bzip2 \
  fish \

# (Optional) Additional performance monitors
# 🛠️ يضيف أدوات مراقبة بديلة
sudo apt install -y nmon glances atop btop bashtop
 
RUN apt update && apt install -y curl
CMD ["bash"]
---

## 4. Docker Basics

 
# Check Docker version
docker --version

# Enable & start Docker service
# 🛠️ يشغل خدمة Docker ويخليها تبدأ أوتوماتيك
sudo systemctl enable docker
sudo systemctl start docker

# Show Docker info
# 🛠️ يعرض تفاصيل تثبيت Docker
docker info

# Run the hello-world container to verify install
docker run hello-world

# Search for an image (e.g., Ubuntu)
# 🛠️ يدور على صورة Ubuntu في الريجيستري
docker search ubuntu

# Pull an image locally
# 🛠️ يحمل صورة Ubuntu على جهازك
docker pull ubuntu

# Run an interactive Ubuntu shell

docker run -it ubuntu bash

# List running containers
# 🛠️ يعرض الكونتينرات الشغالة
docker ps

# List all containers (including stopped)
# 🛠️ يعرض كل الكونتينرات
docker ps -a

# Stop a container by ID
# 🛠️ يوقف كونتينر معين
docker stop <container-id>

# Remove a container by ID
# 🛠️ يحذف كونتينر معين
docker rm <container-id>

# Build your own image from Dockerfile
# 🛠️ يبني صورة my-ubuntu-image من Dockerfile

docker build -t my-ubuntu-image .
 

---

## 5. Networking & IPs

# Show all IP addresses & interfaces
# 🛠️ يعرض عناوين IP وواجهات الشبكة
ip address show
ip a 

# Shortcut for interface stats
# 🛠️ اختصار لعرض الواجهات
ip -s link

# Bring interface up or down

ip link eth0 up
ip link eth0 down

# Display routing table
ip route show

# Test connectivity to Google
ping -c 6 google.com
ping google.com
 

### When Adding A New NIC

	Add From COnsole --> AWS Then Attach 


---

## 6. Hostname & DNS Configuration
	* Temp by session or reboot 	
	* Perm 

 
# Show current hostname
hostname
hostnamectl

# Set permanent hostname
sudo hostnamectl set-hostname your-new-hostname

# Edit /etc/hosts to add custom DNS entries

sudo vim /etc/hosts
cat /etc/hostname
 

---

## 7. User & Group Management

usermod -p 123456 ahmed
passwd --help
chage --help



# Set or change a user’s password
passwd ahmed
usermod -p 123456 ahmed

# Force password change at next login

chage -d 0 ahmed --> to force use chage password now or in the next login 


# Set max password age to 30 days
# 🛠️ يحدّد صلاحية الباسوورد ٣٠ يوم
sudo chage -M 30 ahmed

# Create a new group with GID 6000
# 🛠️ ينشئ جروب جديد بالمعرّف ٦٠٠٠
sudo groupadd -g 6000 dev

# Add user to group(s)
# 🛠️ يضيف المستخدم للجروب
sudo usermod -aG dev ahmed

# Change a group’s GID
# 🛠️ يغير معرّف الجروب
sudo groupmod -g 800 dev

# Show groups a user belongs to
# 🛠️ يعرض جروبات المستخدم
groups ahmed

# Delete a group (only if no primary users)
# 🛠️ يمسح جروب بعد نقل المستخدمين
sudo groupdel dev
 

groupadd --help
sudo groupadd -g 6000 dev
usemod -aG list of groups
sudo usermod -aG dev ahmed
groupmod -g 800 dev
groups ahmed --> will get groups that ahmed in 
groupdel --> i cannot delete a group where this group is a primary for a user . should move users from  then delete group or change the primary group for users 

---

## 8. File, Directory & Link Management

 
# List files (all, long format, inode, recursive)
# 🛠️ يستعرض الملفات بصيغ مختلفة
ls -a -l
ls -al
ls -ial
ls -R
ls -lh
ls -ld /home/ --> wherever you are , see the permission on any directory without moving to it


# Copy & rename files/folders
check how cp "Copy Command" Can be used for renaming files 

# 🛠️ ينسخ أو يعيد تسمية
cp file.txt /path/to/dest/
cp -av project/ /backup/projects/
mv old.txt new.txt

# Remove files/directories (with confirmation/force)
# 🛠️ يحذف ملفات ومجلدات
rm -i *.tmp
rm -rf /tmp/mycache/

rm -r project 
# بنفس الوقت يطلب تأكيد لكل ملف  
rm -ri project  


# Create and remove directories
# 🛠️ ينشئ أو يحذف مجلدات
mkdir new_folder
rmdir old_folder

# Create hard & soft links
# 🛠️ ينشئ وصلات صلبة وناعمة
ln source.txt hardlink.txt
ln -s /path/to/file symlink.txt

# Show inode numbers & link behavior
# 🛠️ يعرض أرقام Inode ويشرح السلوك
stat source.txt
 

cp file.txt /home/user/backup/            # نسخ ملف مفرد  
cp -i report.pdf /mnt/usb/                # نسخ مع تأكيد  
cp -av project/ /home/user/projects_backup/  # نسخ مجلد كامل بإظهار التفاصيل وحفظ كل الأذونات  
cp -v a.txt b.txt	
cp -a src/ dest/	ينسخ مجلد src/ بكامل شجرته، محافظاً على الأذونات والروابط
cp -r src/ dest/	ينسخ مجلد src/ بشكل متكرر (recursive)، لكن لا يحافظ على كل الأذونات
cp -rp src/ dest/	نسخة متكررة + تحفظ الأذونات timestamps

rm old.log                                 # حذف ملف واحد
rm -i *.tmp                                # حذف كل الملفات المنتهية بـ .tmp مع تأكيد
rm -v report.pdf                           # حذف مع عرض رسالة لكل ملف
rm -rf /tmp/mycache/                       # حذف مجلد mycache بكامل محتوياته دون تأكيد
rm -r --one-file-system /mnt/drive/backup/ # حذف بدون اختراق أقسام مُركّبة أخرى
---

## 9. File Viewing & Editing

 
# Paginate or count lines in /etc/passwd
# 🛠️ يقسم أو يعدّ أسطر passwd
cat /etc/passwd | more
cat /etc/passwd | wc -l

# Tail security or syslogs live
# 🛠️ يتابع لوج الأمان أو النظام
tail -f /var/log/security

# View & edit Bash startup files
# 🛠️ يعرض ويحرر ملفات الإعداد
cat ~/.bashrc
cat ~/.bash_profile
vim ~/.bashrc

# Concatenate script and capture both stdout & stderr
# 🛠️ يجمع السكربت والنواتج+الأخطاء في ملف
(cat myscript.sh; echo "----- Output -----"; bash myscript.sh 2>&1) > combined_log.txt
 

---

## 10. Searching & Manuals
grep --help 
find --help 

# Find files by name and redirect errors
# 🛠️ يبحث عن ملفات ويحفظ الأخطاء
find /etc -name passwd 2>> /home/error.txt

# Search manuals (apropos), show all matches
# 🛠️ يبحث في وصف المان ويعرض كل النتائج
man -k ssh
man -a intro

# One-line description for a command
# 🛠️ يعطيك وصف قصير
man -f printf

# View French man-page if available
# 🛠️ يفتح مان بفرنساوي لو موجود
man --locale=fr ls

# Use custom man.conf or pager

man -C ~/my-man.conf ls
man -P more tar
#!/usr/bin/env bash
# linux_man_and_helpers.sh
# A collection of example man and file‐viewing commands.

echo "1) Find location of passwd man-page:"
man -w passwd

echo
echo "2) Display passwd man-page from its file (local mode):"
man -l /usr/share/man/man1/passwd.1.gz

echo
echo "3) View passwd man-page with zless:"
zless /usr/share/man/man1/passwd.1.gz

echo
echo "4) View passwd man-page via gzip and less:"
gzip -dc /usr/share/man/man1/passwd.1.gz | less

echo
echo "5) Render nroff output of passwd man-page:"
gzip -dc /usr/share/man/man1/passwd.1.gz | nroff -man | less

echo
echo "6) Number lines of /etc/passwd:"
cat -n /etc/passwd

echo
echo "7) Search man-database for keyword 'ssh':"
man -k ssh

echo
echo "8) Show one-line description for 'printf':"
man -f printf

echo
echo "9) Display all intro man-pages:"
man -a intro

echo
echo "10) Locate the man-page file for bash:"
man -w bash

echo
echo "11) Use custom MANPATH for 'mytool':"
man -M /usr/local/man mytool || echo "mytool man-page not found in /usr/local/man"

echo
echo "12) Use alternate man.conf for ls:"
man -C ~/my-man.conf ls || echo "custom man.conf not found"

echo
echo "13) View tar page with 'more' instead of 'less':"
man -P more tar

echo
echo "14) Show all groff warnings for printf man-page:"
man --warnings=all printf

echo
echo "15) View French man-page for ls (if available):"
man --locale=fr ls

echo
echo "16) Show man help:"
man --help

echo
echo "Done."


## 11. Archive & Compression 
ls -l 
touch f{1..5}
tar -cvf helloArchive.tar * 
tar -cvf helloArchive.tar f1 f2
tar -cvf helloArchive.tar f{1..5}
# ls -l --> note size of archived files even files are 0 but when summed up all , take a size

tar -tf helloArchive.tar

rm f1 f2 
# We Need to extract only two files from tar file 
tar -xvf helloArchive.tar f1 f2
rm f{1..5}
tar -xvf helloArchive.tar


##Compress

tar  -czf helloArchive.tar.gz f*
tar -cjf kaka.tar.bz2 f*
tar -cJf kaka.tar.xz f*

ls -lh 
# Note the size variation 

tar -xzf helloArchive.tar.gz
tar -xjf kaka.tar.bz2
tar -xJf kaka.tar.xz 



## 11 Disk Managment 
    lsblk
    lsblk -f
    lsblk -fp
    df
    df -h
    sudo parted /dev/xvda print
       blkid



## 12 Process & Services
top 
systemctl list-units --type=service
ps -p $$ 
ps aux | grep apache | wc -l
systemctl status ssh
systemctl is- [tab tab ]
systemctl mask httpd 
systemctl umask httpd

## 13 Security 

SSH --> User Password Ath 
SSH --> Key Pair Auth ; asymmetric encryption 


~/.ssh/known_hosts
~/.ssh/id_rsa.pub --> Public Key
~/.ssh/id_rsa --> Private Key

On Server : ~/.ssh/authorized_keys
 

ssh-keygen --> Done on local / Client 
this will create public and private key together and ask you where do you want to be stored and either ask you if you want to add passphares or not.


To Copy Key :
ssh-copy-id user@server 
or copy it manual from clinet to server into authorized keys 

Csutom Config SSH File  And This is done on Server Side not client 
* Changing the default port 
* Others 

sudo vim /etc/ssh/sshd_config.d --> change default port 
then restart fopr service 
sudo systemctl restart sshd


then add custom port in connection 

ssh -i key.pem -p custom port user@server
---

## -1 Notes 

Manual Of Linux (Options)

Space: next page
b: back one page
/pattern + Enter: search forward for “pattern”
n / N: next / previous search match
h: built-in less help (shows all its key bindings)
q: quit back to the shell.

man man-pages

History Command 
	history -> to get history 
	! n -> Run Command with the number exist in history 
In Case there is multiple command with same command and i need the last one --> !name of command 
Ctrl + l --> Histroy

tap tap magic 
* option 
* auto complete 
------------------------------------------------------
date +$R
date +%R
who 
whoami
------------------------------------------------------
setterm -bold on -fore green -back default --clear
file /etc
------------------------------------------------------
which 
whatis
visudo
cat /etc/group
cat /etc/shadow
cat /etc/passwd
------------------------------------------------------
tail -f /var/log/security --> Sudoers Log File 

------------------------------------------------------
cat /etc/passwd | more   # For paging through the output
cat /etc/passwd | wc -l  # For counting lines
su - 
su 
cd ~ 
ctrl + l 
whatis *command* == man -f *command* --> you will get the **section number** then 
man **section number**  *command*
------------------------------------------------------
chmod a+x
chmod g=rwx

------------------------------------------------------
sudo useradd -c "HabibaInLinux" -u 5001 -m -d /home/renadAndRetal -p $(openssl passwd -1 123456) Habiba
sudo useradd -c "HabibaInLinux" -u 5001 -m -d /home/renadAndRetal -p $(openssl passwd -1 123456) Habiba
(cat myscript.sh; echo "----- Output -----"; bash myscript.sh 2>&1) > combined_log.txt
(cat hello.bash; echo "=============output====="; ./hello.bash 2>&1) > bothErrorAndResults.txt
(cat hello.bash ; echo "=============output====="; ./hello.bash &>>bothErrorAndResults.txt) &>> bothErrorAndResults.txt

------------------------------------------------------
Inode Number :
بيشاور علي نفسه 
بيشاور علي الاب 

ودا تحت مفهوم 
Soft & Hard Link 

ودا الي بيخلي 
Cd . --> same file in same directory evn when you copy 
cd .. --> go back to parent of this directory which is a step back --> because of Softline & Inode Number 

------------------------------------------------------

get the count of file inside tar file in linux 

tar -tf yourfile.tar | wc -l
------------------------------------------------------

man find 
find /etc -name 
find /etc -name passwd 2>> /home/error.txt
------------------------------------------------------
------------------------------------------------------
Permissions Vs Unmask Command 
------------------------------------------------------

man locate 
locate -name | grep etc 
updateddb  --> this to update locate database that is being used for locating files.


Showing Number Of Lines inside VIM Bash File;
vim script.sh 
:set number

pstree --> if you want to see number of current opened shells as a process
if you are access remote machine :
 you will find this shell services under --> sshd 

sshd--sshd--sshd--bash--bash--pstree  ; here there are two bash shell


Rplace Text In File 

sed -i 's/oldtext/newtext/g' filename.txt

ubuntu@UbuntUmachine:~$ sed -i 's/Ahmed Alhusainy/Zian Ahmed Alhusainy/g' replace.txt ; echo $?
0
ubuntu@UbuntUmachine:~$ cat replace.txt
Hello From The Other Side , THis Zian Ahmed Alhusainy
Hello From The Other Side , THis Zian Ahmed Alhusainy
ubuntu@UbuntUmachine:~$


